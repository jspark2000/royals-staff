generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TeamRole {
  HeadCoach
  Coach
  Staff
  Athlete
}

model Attendance {
  id       Int      @id @default(autoincrement())
  uid      String   @db.Uuid
  date     DateTime @db.Timestamp(6)
  location String   @default("integrated") @db.VarChar(20)
  late     Boolean
  survey   Boolean
  checked  Boolean  @default(false)
  isGame   Boolean  @default(false)
  People   People   @relation(fields: [uid], references: [uid], onDelete: Cascade, map: "Attendance_People_uid_fk")

  @@unique([uid, date, location], map: "uid_date_location")
}

model BandUser {
  id           Int       @id @default(autoincrement())
  userKey      String    @unique @db.VarChar(60)
  userNickname String    @db.VarChar(20)
  role         String    @default("newbie") @db.VarChar(10)
  teamRole     TeamRole  @default(Athlete)
  profileUrl   String    @default("https://coresos-phinf.pstatic.net/a/30f048/3_2h2Ud018svcxyrfbhxl9z38_2u6v6s.jpg") @db.VarChar(200)
  People       People?
}

model GameReview {
  id             Int      @id @default(autoincrement())
  postKey        String   @unique @db.VarChar(60)
  userKey        String   @db.VarChar(60)
  submissionTime DateTime @db.Timestamp(6)
}

model Game {
  id            Int       @id @default(autoincrement())
  gameName      String    @unique @db.VarChar(100)
  gameDate      DateTime  @unique @db.Timestamp(6)
  homeTeamName  String    @db.VarChar(30)
  homeTeamScore Int?      @default(0)
  awayTeamName  String    @db.VarChar(30)
  awayTeamScore Int?      @default(0)
  everyone      Boolean?
  deadLine      DateTime? @db.Timestamp(6)
  lateLine      DateTime? @db.Timestamp(6)
}

model GoogleSheet {
  id        Int      @id @default(autoincrement())
  columns   String?
  createdAt DateTime @default(now()) @db.Timestamp(6)
  records   String?
  sheetName String?  @db.VarChar(30)
}

model People {
  id          Int          @id @default(autoincrement())
  uid         String       @unique @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String       @db.VarChar(20)
  studentNo   Int
  bandUserKey String       @unique @db.VarChar(60)
  offPosition String       @default("no") @db.VarChar(20)
  defPosition String       @default("no") @db.VarChar(20)
  splPosition String       @default("no") @db.VarChar(20)
  Attendance  Attendance[]
  BandUser    BandUser     @relation(fields: [bandUserKey], references: [userKey], onDelete: Cascade, onUpdate: Cascade, map: "People_BandUser_userKey_fk")

  @@unique([name, studentNo], map: "name_studentNo")
}
